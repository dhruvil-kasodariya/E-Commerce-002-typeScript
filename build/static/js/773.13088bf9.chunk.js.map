{"version":3,"file":"static/js/773.13088bf9.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.style.tsx","components/form-input/form-input.style.tsx","components/form-input/form-input.component.tsx","components/sign-up-form/sign-up-form.style.tsx","components/sign-up-form/sign-up-form.component.tsx","components/sign-in/sign-in.style.tsx","components/sign-in/sign-in.component.tsx","routes/Authentication/authentication.style.tsx","routes/Authentication/authentication.component.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n  ButtonSpinner,\n} from \"./button.style\";\n\nimport React, { FC, ButtonHTMLAttributes } from \"react\";\n\nexport enum BUTTON_TYPE_CLASSES {\n  base = \"base\",\n  google = \"google-sign-in\",\n  inverted = \"inverted\",\n}\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton =>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nexport type ButtonProps = {\n  children: React.ReactNode;\n  buttonType?: BUTTON_TYPE_CLASSES;\n  isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  buttonType,\n  isLoading,\n  ...otherProps\n}) => {\n  const CustomButton = getButton(buttonType);\n  return (\n    <CustomButton disabled={isLoading} {...otherProps}>\n      {isLoading ? <ButtonSpinner /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\nimport { SpinnerContainer } from \"../spinner/spinner.style\";\n\nexport const BaseButton = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: \"Sedgwick Ave Display\", cursive, \"Open Sans Condensed\";\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nexport const ButtonSpinner = styled(SpinnerContainer)`\n  width: 30px;\n  height: 30px;\n`;\n","import styled, { css } from \"styled-components\";\n\nconst subColor = \"grey\";\nconst mainColor = \"black\";\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\ntype FormInputLabelProps = {\n  shrink?: boolean;\n};\n\nexport const FormInputLabel = styled.label<FormInputLabelProps>`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n\n  ${({ shrink }) => shrink && shrinkLabelStyles};\n`;\nexport const Input = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n  font-family: \"Sedgwick Ave Display\", cursive;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ~ ${FormInputLabel} {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const Group = styled.div`\n  position: relative;\n  margin: 45px 0;\n\n  input[type=\"password\"] {\n    letter-spacing: 0.3em;\n  }\n`;\n","import { InputHTMLAttributes, FC } from \"react\";\nimport { Group, FormInputLabel, Input } from \"./form-input.style\";\n\ntype FormInputProps = { label: string } & InputHTMLAttributes<HTMLInputElement>;\nconst FormInput: FC<FormInputProps> = ({ label, ...otherProps }) => {\n  return (\n    <Group>\n      <Input {...otherProps} />\n      {label && (\n        <FormInputLabel\n          shrink={Boolean(\n            otherProps.value &&\n              typeof otherProps.value === \"string\" &&\n              otherProps.value.length\n          )}\n        >\n          {label}\n        </FormInputLabel>\n      )}\n    </Group>\n  );\n};\n\nexport default FormInput;\n","import styled from \"styled-components\";\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  h2 {\n    margin: 10px 0px;\n  }\n`;\n","import { useState, FormEvent, ChangeEvent } from \"react\";\nimport { AuthError, AuthErrorCodes } from \"firebase/auth\";\nimport { useDispatch } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\nimport { signUpStart } from \"../../store/user/user.action\";\nimport { SignUpContainer } from \"./sign-up-form.style\";\nconst initialUserData = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst SignUpForm = () => {\n  const [userData, setUserData] = useState(initialUserData);\n  const { displayName, email, password, confirmPassword } = userData;\n\n  const dispatch = useDispatch();\n\n  const resetUserData = () => {\n    setUserData(initialUserData);\n  };\n\n  const handleFormFieldChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password do not match\");\n      return;\n    }\n\n    try {\n      dispatch(signUpStart(email, password, displayName));\n      resetUserData();\n    } catch (error) {\n      if ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\n        alert(\"Cannot create user,email already in use\");\n      } else {\n        console.log(\"user creation encountered an error \", error);\n      }\n    }\n  };\n\n  return (\n    <SignUpContainer>\n      <h2>Create new account</h2>\n      <span>Sign up with email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Display Name\"\n          type=\"text\"\n          onChange={handleFormFieldChange}\n          name=\"displayName\"\n          value={displayName}\n          required\n        />\n        <FormInput\n          label=\"E-mail\"\n          type=\"email\"\n          onChange={handleFormFieldChange}\n          name=\"email\"\n          value={email}\n          required\n        />\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          onChange={handleFormFieldChange}\n          name=\"password\"\n          value={password}\n          required\n        />\n        <FormInput\n          label=\"Confirme Password\"\n          type=\"password\"\n          onChange={handleFormFieldChange}\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          required\n        />\n        <Button children=\"SIGN-UP\" type=\"submit\" />\n      </form>\n    </SignUpContainer>\n  );\n};\n\nexport default SignUpForm;\n","import styled from \"styled-components\";\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  h2 {\n    margin: 10px 0px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { SignUpContainer, ButtonContainer } from \"./sign-in.style\";\nimport { useState, FormEvent, ChangeEvent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {} from \"../../utils/firebase/firebase.utils\";\nimport FormInput from \"../form-input/form-input.component\";\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../store/user/user.action\";\nconst initialUserData = {\n  email: \"\",\n  password: \"\",\n};\n\nconst SignUpForm = () => {\n  const [userData, setUserData] = useState(initialUserData);\n  const { email, password } = userData;\n  const dispatch = useDispatch();\n\n  const resetUserData = () => {\n    setUserData(initialUserData);\n  };\n\n  const signInWithGoogle = async () => {\n    dispatch(googleSignInStart());\n  };\n\n  const handleFormFieldChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    try {\n      dispatch(emailSignInStart(email, password));\n\n      resetUserData();\n    } catch (error) {\n      console.log(\"User Sign in Failed\", error);\n    }\n  };\n\n  return (\n    <SignUpContainer>\n      <h2>Create new account</h2>\n      <span>Sign up with email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"E-mail\"\n          type=\"email\"\n          onChange={handleFormFieldChange}\n          name=\"email\"\n          value={email}\n          required\n        />\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          onChange={handleFormFieldChange}\n          name=\"password\"\n          value={password}\n          required\n        />\n        <ButtonContainer>\n          <Button type=\"submit\">SIGN-IN</Button>\n          <Button\n            type=\"button\"\n            buttonType={BUTTON_TYPE_CLASSES.google}\n            onClick={signInWithGoogle}\n          >\n            Google Sign-in\n          </Button>\n        </ButtonContainer>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nexport default SignUpForm;\n","import styled from \"styled-components\";\n\nexport const AuthenticationContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin: 30px auto;\n`;\n","import SignUpForm from \"../../components/sign-up-form/sign-up-form.component\";\nimport SignIn from \"../../components/sign-in/sign-in.component\";\nimport { AuthenticationContainer } from \"./authentication.style\";\n\nconst Authentication = () => {\n  return (\n    <AuthenticationContainer>\n      <SignIn />\n      <SignUpForm />\n    </AuthenticationContainer>\n  );\n};\n\nexport default Authentication;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["BUTTON_TYPE_CLASSES","_ref","children","buttonType","isLoading","otherProps","_objectWithoutProperties","_excluded","CustomButton","_BUTTON_TYPE_CLASSES$","arguments","length","undefined","base","_defineProperty","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","_jsx","_objectSpread","disabled","ButtonSpinner","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","SpinnerContainer","_templateObject4","subColor","shrinkLabelStyles","css","FormInputLabel","shrink","Input","Group","label","_jsxs","Boolean","value","SignUpContainer","initialUserData","displayName","email","password","confirmPassword","_useState","useState","_useState2","_slicedToArray","userData","setUserData","dispatch","useDispatch","handleFormFieldChange","e","_e$target","target","name","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","alert","abrupt","signUpStart","error","code","AuthErrorCodes","console","log","stop","_x","apply","onSubmit","FormInput","type","onChange","required","Button","ButtonContainer","signInWithGoogle","googleSignInStart","_ref2","_callee2","_context2","emailSignInStart","onClick","AuthenticationContainer","SignIn","SignUpForm","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}